import DNF
import CNF

tSchema basicA1:(propDNFG,propCNFG) =
    source t:A:var
    target t':A:var
    antecedent
    consequent ([t:A:var], [t':A:var]) :: entails
    strength 1.0

tSchema basicA2:(propDNFG,propCNFG) =
    source t:A:var
    target t':A:var
    antecedent
    consequent ([t:A:var], [t':A:var]) :: isEntailedBy
    strength 1.0

tSchema basicB1:(propDNFG,propCNFG) =
    source t:B:var
    target t':B:var
    antecedent
    consequent ([t:B:var], [t':B:var]) :: entails
    strength 1.0

tSchema basicB2:(propDNFG,propCNFG) =
    source t:B:var
    target t':B:var
    antecedent
    consequent ([t:B:var], [t':B:var]) :: isEntailedBy
    strength 1.0

tSchema basicC1:(propDNFG,propCNFG) =
    source t:C:var
    target t':C:var
    antecedent
    consequent ([t:C:var], [t':C:var]) :: entails
    strength 1.0

tSchema basicC2:(propDNFG,propCNFG) =
    source t:C:var
    target t':C:var
    antecedent
    consequent ([t:C:var], [t':C:var]) :: isEntailedBy
    strength 1.0

tSchema basicD1:(propDNFG,propCNFG) =
    source t:D:var
    target t':D:var
    antecedent
    consequent ([t:D:var], [t':D:var]) :: entails
    strength 1.0

tSchema basicD2:(propDNFG,propCNFG) =
    source t:D:var
    target t':D:var
    antecedent
    consequent ([t:D:var], [t':D:var]) :: isEntailedBy
    strength 1.0

tSchema neg:(propDNFG,propCNFG) =
    source t:nonvar <- neg[t1:var]
    target t':nonvar <- neg[t1':var]
    antecedent ([t1:var], [t1':var]) :: isEntailedBy
    consequent ([t:nonvar], [t':nonvar]) :: entails
    strength 1.0

tSchema disjE:(propDNFG,propCNFG) =
    source t:nonclause <- disj[t1:clause,t2:dnf]
    target t':cnf
    antecedent ([t1:clause],[t':cnf]) :: entails, ([t2:dnf],[t':cnf]) :: entails
    consequent ([t:nonclause],[t':cnf]) :: entails
    strength 1.0

tSchema disjI1:(propDNFG,propCNFG) =
    source t:dnf
    target t':nonliteral <- disj[t1':literal,t2':clause]
    antecedent ([t:dnf],[t1':literal]) :: entails
    consequent ([t:dnf],[t':nonliteral]) :: entails
    pull entails to [t2':clause]
    strength 0.8

comment disjI2:(propDNFG,propCNFG) =
    source t:dnf
    target t':nonliteral <- disj[t1':literal,t2':clause]
    antecedent ([t:dnf],[t2':clause]) :: entails
    consequent ([t:dnf],[t':nonliteral]) :: entails
    pull entails to [t1':literal]
    strength 0.5

tSchema conjE1:(propDNFG,propCNFG) =
    source t:nonliteral <- conj[t1:literal,t2:clause]
    target t':cnf
    antecedent ([t1:literal],[t':cnf]) :: entails
    consequent ([t:nonliteral],[t':cnf]) :: entails
    strength 1.0

tSchema conjE2:(propDNFG,propCNFG) =
    source t:nonliteral <- conj[t1:literal,t2:clause]
    target t':cnf
    antecedent ([t2:clause],[t':cnf]) :: entails
    consequent ([t:nonliteral],[t':cnf]) :: entails
    strength 1.0

comment conjI:(propDNFG,propCNFG) =
    source t:nonliteral
    target t':nonclause <- conj[t1':clause,t2':cnf]
    antecedent ([t:nonliteral],[t1':clause]) :: entails, ([t:nonliteral],[t2':cnf]) :: entails
    consequent ([t:nonliteral],[t':nonclause]) :: entails
    strength 0.1
