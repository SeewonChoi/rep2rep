import listBTree
import bayes

typeSystem nat10T =
    types 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, digit, _:nat10
    order digit < nat10,
          0 < digit,
          1 < digit,
          2 < digit,
          3 < digit,
          4 < digit,
          5 < digit,
          6 < digit,
          7 < digit,
          8 < digit,
          9 < digit

conSpec nat10:nat10T =
    constructors
        addDigit : [digit,nat10] -> nat10


typeSystem real10T =
    imports nat10T
    types _:real10, _:var, numExp
    order nat10 < real10, real10 < numExp, var < numExp

conSpec real10:real10T =
    imports nat10
    constructors
        makeReal : [nat10,nat10] -> real10

typeSystem bayesPlusT = imports bayes, real10T

conSpec bayesPlus:bayesPlusT = imports bayesG, real10


typeSystem interBTreeBayesT =
    imports btreeT, bayesPlusT, metaLogicT, real10T

conSpec interBTreeBayes:interBTreeBayesT =
    imports btree, bayesPlus, metaLogic
    constructors
        EQ : [btree,probEqn] -> metaBool,
        SYS : [btree,probSys] -> metaBool,
        EVT : [btree,events] -> metaBool,
        BIN : [btree,bin] -> metaBool,
        REAL : [btree,numExp] -> metaBool,
        NAT : [btree,nat10] -> metaBool


tSchema eq:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:P:nbItem,
                             t2:btree <- branch[t21:r:nbItem,
                                                t22:btree <- branch[t221:btree,
                                                                    t222:btree <- branch[t2221:=:nbItem,
                                                                                         t2222:btree]]]]
    target t':probEqn <- makeEqn[t1':events, t2':numExp]
    antecedent :metaTrue <- EVT[t221:btree,t1':events],
               :metaTrue <- REAL[t2222:btree,t2':numExp]
    consequent :metaTrue <- EQ[t:btree,t':probEqn]
    strength 1

tSchema evt1:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:btree,
                             t2:btree <- branch[t21:btree,
                                                t22:btree]]
    target t':event <- infix[t1':event, t2':bin, t3':event]
    antecedent :metaTrue <- EVT[t1:btree,t1':event],
               :metaTrue <- BIN[t21:btree,t2':bin],
               :metaTrue <- EVT[t22:btree,t3':event]
    consequent :metaTrue <- EVT[t:btree,t':event]
    strength 1

tSchema evt2:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:-:nbItem,t2:btree]
    target t':event <- complement[t1':event]
    antecedent :metaTrue <- EVT[t2:btree,t1':event]
    consequent :metaTrue <- EVT[t:btree,t':event]
    strength 1

tSchema evt3:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:btree,
                             t2:btree <- branch[t21:|:nbItem,
                                                t22:btree]]
    target t':condEvent <- makeCond[t1':event, t2':event]
    antecedent :metaTrue <- EVT[t1:btree,t1':event],
               :metaTrue <- EVT[t22:btree,t2':event]
    consequent :metaTrue <- EVT[t:btree,t':condEvent]
    strength 1

comment TODO: real var

tSchema real0:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:0:nbItem,
                             t2:btree <- branch[t21:.:nbItem,
                                                t22:btree]]
    target t':real10 <- makeReal[t1':0, t2':nat10]
    antecedent :metaTrue <- NAT[t22:btree,t2':nat10]
    consequent :metaTrue <- REAL[t:btree,t':real10]
    strength 1

tSchema real1:(btree,bayesPlus,interBTreeBayes) =
    source t:1:nbItem
    target t':1
    antecedent
    consequent :metaTrue <- REAL[t:1:nbItem,t':1]
    strength 1

tSchema natural0:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:0:nbItem,
                             t2:btree]
    target t':nat10 <- addDigit[t1':0, t2':nat10]
    antecedent :metaTrue <- NAT[t2:btree,t2':nat10]
    consequent :metaTrue <- NAT[t:btree,t':nat10]
    strength 1

tSchema natural1:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:1:nbItem,
                             t2:btree]
    target t':nat10 <- addDigit[t1':1, t2':nat10]
    antecedent :metaTrue <- NAT[t2:btree,t2':nat10]
    consequent :metaTrue <- NAT[t:btree,t':nat10]
    strength 1

tSchema natural2:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:2:nbItem,
                             t2:btree]
    target t':nat10 <- addDigit[t1':2, t2':nat10]
    antecedent :metaTrue <- NAT[t2:btree,t2':nat10]
    consequent :metaTrue <- NAT[t:btree,t':nat10]
    strength 1

tSchema natural3:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:3:nbItem,
                             t2:btree]
    target t':nat10 <- addDigit[t1':3, t2':nat10]
    antecedent :metaTrue <- NAT[t2:btree,t2':nat10]
    consequent :metaTrue <- NAT[t:btree,t':nat10]
    strength 1

tSchema natural4:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:4:nbItem,
                             t2:btree]
    target t':nat10 <- addDigit[t1':4, t2':nat10]
    antecedent :metaTrue <- NAT[t2:btree,t2':nat10]
    consequent :metaTrue <- NAT[t:btree,t':nat10]
    strength 1

tSchema natural5:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:5:nbItem,
                             t2:btree]
    target t':nat10 <- addDigit[t1':5, t2':nat10]
    antecedent :metaTrue <- NAT[t2:btree,t2':nat10]
    consequent :metaTrue <- NAT[t:btree,t':nat10]
    strength 1

tSchema natural6:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:6:nbItem,
                             t2:btree]
    target t':nat10 <- addDigit[t1':6, t2':nat10]
    antecedent :metaTrue <- NAT[t2:btree,t2':nat10]
    consequent :metaTrue <- NAT[t:btree,t':nat10]
    strength 1

tSchema natural7:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:7:nbItem,
                             t2:btree]
    target t':nat10 <- addDigit[t1':7, t2':nat10]
    antecedent :metaTrue <- NAT[t2:btree,t2':nat10]
    consequent :metaTrue <- NAT[t:btree,t':nat10]
    strength 1

tSchema natural8:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:8:nbItem,
                             t2:btree]
    target t':nat10 <- addDigit[t1':8, t2':nat10]
    antecedent :metaTrue <- NAT[t2:btree,t2':nat10]
    consequent :metaTrue <- NAT[t:btree,t':nat10]
    strength 1

tSchema natural9:(btree,bayesPlus,interBTreeBayes) =
    source t:btree <- branch[t1:9:nbItem,
                             t2:btree]
    target t':nat10 <- addDigit[t1':9, t2':nat10]
    antecedent :metaTrue <- NAT[t2:btree,t2':nat10]
    consequent :metaTrue <- NAT[t:btree,t':nat10]
    strength 1


transfer
    sourceConstruction list0
    targetConSpec btree
    interConSpec interListBTree
    goal :metaTrue <- L[z:0,t:Pr(x)=0.21:list,t':btree]
    searchLimit 50
    output sss
    limit 10
    save sss

transfer
    sourceConstruction sss
    targetConSpec bayesPlus
    interConSpec interBTreeBayes
    goal :metaTrue <- EQ[v_{0}:btree,t':probEqn]
    searchLimit 50
    output sss1
    limit 10
