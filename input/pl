typeSystem pl = 
    types true, false, _:var, _:plExp, unaryOp, binOp, not, and, or, imply, iff, oB, cB, par     
    order true < plExp,
          false < plExp,
          var < plExp,
          not < unaryOp,
          and < binOp,
          or < binOp,
          iff < binOp,
          imply < binOp,
          oB < par,
          cB < par

conSpec plG:pl = 
  constructors
    unaryOp : [unaryOp,plExp] -> plExp,
    infixOp : [plExp,binOp,plExp] -> plExp,
    addParentheses : [oB,plExp,cB] -> plExp
